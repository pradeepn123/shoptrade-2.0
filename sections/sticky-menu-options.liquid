<div class="sticky_pop_up_parent mobile-sticky-service">
  <div class="tab-sticky-options_main">
    <div class="container">
      <div class="tab-sticky-options">
        <div class="options_parent">
          {% assign explore_all_menu = linklists['explore-all'] %}
          {% for link in explore_all_menu.links %}
            <a href="{{ link.url | replace: '/en-in', '' }}"> {{ link.title }}</a>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <div class="Sticky-options-menu_parent">
    <div class="container">
      <div class="Sticky-options-menu">
        <div class="all_options" id="exploreAll">
          {% if section.settings.Main_btn %}
            <a>
              {{ section.settings.Main_btn }}
              <span> {% render 'Show-hide-arrow' %} </span>
            </a>
          {% endif %}
        </div>
        <div class="options_parent">
          {% assign explore_all_menu = linklists['explore-all'] %}
          {% for link in explore_all_menu.links %}
            <a href="{{ link.url | replace: '/en-in', '' }}"> {{ link.title }}</a>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
  <div class="sticky-popup-content" id="showOnClick">
    <div class="container">
      <div class="sticky-popup">
        <div class="sticky_popup_child">
          {% for link in explore_all_menu.links %}
            <div class="sticky-popup_text">
              <a class="sticky-pop_heading" href="{{ link.url | replace: '/en-in', '' }}">{{ link.title }}</a>
              {% if link.links %}
                <div class="sticky-pop_links_head">
                  {% for child_link in link.links %}
                    <div class="sticky-pop_links_child">
                      <a class="sticky-pop_links" href="{{ child_link.url | replace: '/en-in', '' }}">
                        {{- child_link.title -}}
                      </a>
                    </div>
                  {% endfor %}
                </div>
              {% endif %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>
<div id="sticky_menu_parent_popUP"></div>
{% schema %}
{
  "name": "Sticky-menu-options",
  "settings": [
    {
      "type": "text",
      "id": "Main_btn",
      "label": "Heading",
      "default": "Explore ALL"
    }
  ],
  "presets": [
    {
      "name": "Sticky Menu"
    }
  ]
}
{% endschema %}

<script>
  window.onload = function () {
    let stickyBody = document.querySelector('#sticky_menu_parent_popUP');
    let menuBtn = document.querySelectorAll('.sticky-pop_links');
    let optSvgM = document.querySelector('#exploreAll svg');
    let stickyPopup = document.querySelector('#showOnClick');
    let allOpt = document.querySelector('#exploreAll');
    let optSvg = document.querySelector('#exploreAll svg');
    let footerHeight = $('.shopify-footer').height();
    let elementDiv = document.querySelector('.services_multicolumn_container');
    let bannerHeight = document.querySelector('.page_banner_shadow');
    let bannerDiv = bannerHeight.clientHeight;
    let body = document.querySelector('body');

    // Highlight function to add temporary highlight effect
    function highlight(btn) {
      let div = document.querySelector(btn.getAttribute('href'));
      div.style.boxShadow = '0px 16px 24px 0px rgba(0, 0, 0, 0.08), 0px -12px 12px 0px rgba(0, 0, 0, 0.08)';
      setTimeout(function () {
        removeHighlight(div);
      }, 3000);
    }

    // Function to remove highlight effect
    function removeHighlight(div) {
      div.style.boxShadow = '0px 16px 24px 0px rgba(50, 50, 71, 0.08), 0px 12px 12px 0px rgba(50, 50, 71, 0.08)';
    }

    // Adding click event listeners to menu buttons
    menuBtn.forEach(function (menuBtn) {
      menuBtn.addEventListener('click', function () {
        stickyPopup.style.display = 'none';
        optSvgM.classList.remove('rotate_arrow');
        highlight(this);
      });
    });

    // Adding click event listener to exploreAll option
    allOpt.addEventListener('click', function () {
      if (optSvg.classList.contains('rotate_arrow')) {
        optSvg.classList.remove('rotate_arrow');
        stickyPopup.style.display = 'none';
      } else {
        optSvg.classList.add('rotate_arrow');
        stickyPopup.style.display = 'flex';
      }
    });

    // Function to handle sticky behavior on scroll
    function handleSticky() {
      let window_top = $(window).scrollTop();
      let footerCartShow = $(document).height() - $(window).height() - footerHeight;
      if (window_top > 60 && window_top < footerCartShow) {
        $('.sticky_pop_up_parent').addClass('sticky-service-show');
        $('#shopify-section-header').removeClass('fixed-header');
      } else {
        $('.sticky_pop_up_parent').removeClass('sticky-service-show');
        $('#shopify-section-header').addClass('fixed-header');
      }
    }

    // Adding scroll event listener to handle sticky behavior
    $(window).scroll(function () {
      handleSticky();
    });

    // Adding click event listener to exploreAll option for toggling visibility
    allOpt.addEventListener('click', function () {
      if (body.style.overflow === 'auto') {
        stickyBody.style.display = 'block';
        body.style.overflow = 'hidden';
      } else {
        body.style.overflow = 'auto';
        stickyBody.style.display = 'none';
      }
    });

    // Adding click event listener to menu buttons to hide the popup and restore overflow
    menuBtn.forEach(function (menuBtnN) {
      menuBtnN.addEventListener('click', function () {
        body.style.overflow = 'auto';
        stickyBody.style.display = 'none';
      });
    });

    // Adding click event listener to stickyBody to hide popup and restore overflow
    stickyBody.addEventListener('click', function () {
      stickyPopup.style.display = 'none';
      stickyBody.style.display = 'none';
      body.style.overflow = 'auto';
      optSvg.classList.remove('rotate_arrow');
    });

    // Adding click event listeners to close the popup when clicking on menuStickyOPt or optionsParent
    let menuStickyOPt = document.querySelectorAll('.sticky-pop_heading');
    menuStickyOPt.forEach((ele) => {
      ele.addEventListener('click', () => {
        stickyPopup.style.display = 'none';
        stickyBody.style.display = 'none';
        body.style.overflow = 'auto';
        optSvg.classList.remove('rotate_arrow');
      });
    });

    let optionsParent = document.querySelectorAll('.options_parent a');
    optionsParent.forEach((elem) => {
      elem.addEventListener('click', () => {
        stickyPopup.style.display = 'none';
        stickyBody.style.display = 'none';
        body.style.overflow = 'auto';
        optSvg.classList.remove('rotate_arrow');
      });
    });
  };
</script>
